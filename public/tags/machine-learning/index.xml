<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Machine Learning on xie</title>
    <link>https://meriedith.com/tags/machine-learning/</link>
    <description>Recent content in Machine Learning on xie</description>
    <image>
      <title>xie</title>
      <url>https://meriedith.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://meriedith.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.125.1</generator>
    <language>en</language>
    <atom:link href="https://meriedith.com/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>fixing code style with style</title>
      <link>https://meriedith.com/posts/linter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://meriedith.com/posts/linter/</guid>
      <description>Key Topics OpenAI API Function Chains Validation Prompt Engineering Abstract In my university computer science course, we have an extensive code standard. We are provided with a linter that is a bash script and identifies most errors, but it doesn&amp;rsquo;t cover every case, such as embedded constants and local variable definitions. In this project, I will focus on embedded constants and cover 1. identifying these, and 2, fixing these.
The strategy I use to solve this issue can be applied to anything similar.</description>
    </item>
    <item>
      <title>introduction to openai function calling</title>
      <link>https://meriedith.com/posts/function_calling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://meriedith.com/posts/function_calling/</guid>
      <description>Key Topics OpenAI Function Calls State Handling API Integration Abstract q: what is the uuid of the player merrydith? Question: How can my code respond to human like speech input?
This project is a demonstration on how a large language model can access information outside of the data set it was trained on. OpenAI has added the capability to create functions (ex. accessing mojang api) and call respective functions when the language model sees fit.</description>
    </item>
  </channel>
</rss>
